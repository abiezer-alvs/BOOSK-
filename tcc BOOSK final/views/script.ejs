
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"
integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"
crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"
integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"
crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
$(document).ready(function () {
    $('#sidebarCollapse').on('click', function () {
        $('#sidebar').toggleClass('active');
        $(this).toggleClass('active');
    });
});


const cronometros = document.querySelectorAll('.cronometro');

setInterval(function () {
    cronometros.forEach(function (cronometro) {
        const dataOferta = new Date(cronometro.getAttribute('data-data-oferta'));
        const agora = new Date();
        const diferenca = dataOferta - agora;

        if (diferenca <= 0) {
            cronometro.innerHTML = 'Oferta encerrada!';
        } else {
            const meses = Math.floor(diferenca / (1000 * 60 * 60 * 24 * 30));
            const dias = Math.floor(diferenca / (1000 * 60 * 60 * 24)) % 30;
            const horas = Math.floor(diferenca / (1000 * 60 * 60)) % 24;
            const minutos = Math.floor(diferenca / (1000 * 60)) % 60;
            const segundos = Math.floor(diferenca / 1000) % 60;

            let tempoRestante = '';
            if (meses > 0) {
                tempoRestante += `${meses}m `;
            }
            if (dias > 0) {
                tempoRestante += `${dias}d `;
            }
            tempoRestante += `${horas}h ${minutos}m ${segundos}s`;

            cronometro.innerHTML = `Tempo restante: ${tempoRestante}`;
        }
    });
}, 1000);

const estadoSelect = document.getElementById('estado');
const cidadeSelect = document.getElementById('cidade');

let estadosData;

fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados')
    .then(response => response.json())
    .then(estados => {
        estadosData = estados; 

        estados.forEach(estado => {
            const option = document.createElement('option');
            option.value = estado.nome; 
            option.text = estado.nome;
            estadoSelect.appendChild(option);
        });
    });

estadoSelect.addEventListener('change', () => {
    const estadoNome = estadoSelect.value;

    const estado = estadosData.find(estado => estado.nome === estadoNome);

    if (estado) {
        const estadoId = estado.id;
        cidadeSelect.innerHTML = '';

        fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoId}/municipios`)
            .then(response => response.json())
            .then(cidades => {
                cidades.forEach(cidade => {
                    const option = document.createElement('option');
                    option.value = cidade.nome;
                    option.text = cidade.nome;
                    cidadeSelect.appendChild(option);
                });
            });
    }
});
</script>